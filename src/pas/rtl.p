[ENVIRONMENT ('rtl.pen')]

MODULE  RTL;

        { Predeclared event numbers }
CONST
        FDV_C_HANGUP = -9;              { CTRL/] }
        FDV_C_HELP = -8;                { ? }
        FDV_C_UPDATE = -7;              { update cycle }
        FDV_C_INIT = -6;                { initialization phase }
        FDV_C_REFRESH = -5;             { CTRL/R, CTRL/W }
        FDV_C_F4 = -4;                  { F4 }
        FDV_C_F3 = -3;                  { F3 }
        FDV_C_F2 = -2;                  { F2 }
        FDV_C_F1 = -1;                  { F1 }
        FDV_C_CTRL_Z = 0;               { CTRL/Z }

        { Condition code values }
CONST
        FDV__NORMAL = %x'08298801';
        FDV__DO = %x'08298809';
        FDV__RETURN = %x'08298811';
        FDV__REWIND = %x'08298819';
        FDV__QUIT = %x'08298821';
        FDV__EXIT = %x'08298829';
        FDV__SAVE = %x'08298831';
        FDV__UNSAVE = %x'08298839';
        FDV__RETAIN = %x'08298841';
        FDV__HANGUP = %x'08298849';
        FDV__ERROR = %x'08299002';
        FDV__INITFAI = %x'08298003';
        FDV__ILLCALL = %x'0829A004';
        FDV__FILNOTFND = %x'0829A00C';
        FDV__INVMENU = %x'0829A014';
        FDV__STRTOOLON = %x'0829A01C';
        FDV__ILLMENLEN = %x'0829A024';
        FDV__OPENFAI = %x'0829A02C';
        FDV__INVSYNENU = %x'0829A034';
        FDV__ILLFORMAT = %x'0829A03C';
        FDV__NOMENU = %x'0829A044';
        FDV__INVKEY = %x'0829A04C';
        FDV__UNDEFKEY = %x'0829A054';
        FDV__NODISP = %x'0829A05C';
        FDV__NOCOMREG = %x'0829A064';
        FDV__PARSE = %x'0829C000';
        FDV__RANGE = %x'0829C008';
        FDV__INVADDR = %x'0829C010';
        FDV__NONAME = %x'0829C018';

        { Type definitions }
TYPE
        FDV_MODE = (MODE_CONVERSATIONAL, MODE_MONITOR);
        FDV_INTERVAL = 0..3600;

        FDV_LINE = 1..24;
        FDV_COLUMN = 1..80;

        FDV_VIDEO_ATTRIBUTE = (ATTRIBUTE_BOLD, ATTRIBUTE_UNDERLINE,
            ATTRIBUTE_BLINKING, ATTRIBUTE_REVERSE);

        FDV_ATTRIBUTES = SET OF FDV_VIDEO_ATTRIBUTE;

[HIDDEN]
TYPE
        UBYTE = [BYTE] 0..255;
        STRING = VARYING[255] OF CHAR;

{ Form Driver entry point descriptions }

[ASYNCHRONOUS, EXTERNAL(FDV_LOAD_C)] PROCEDURE FDV_LOAD(
   %REF MENU_NAME : VARYING[_U1] OF CHAR;
   %REF DISPLAY : VARYING[_U2] OF CHAR;
   %REF COM_REG : [UNSAFE] ARRAY[_L3.._U3: INTEGER] OF UBYTE := %IMMED 0;
   %REF SAVE_FILE : VARYING[_U4] OF CHAR := %IMMED 0;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] FUNCTION FDV_PRESENT(
   %REF COM_REG : [UNSAFE] ARRAY[_L1.._U1: INTEGER] OF UBYTE := %IMMED 0;
    VAR STATUS : INTEGER := %IMMED 0) : BOOLEAN; EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_DISP(
 %IMMED KEY : INTEGER := %IMMED 0;
 %IMMED [UNBOUND] PROCEDURE USER_ACTION_ROUTINE(VAR EFN, STATUS : INTEGER)
	:= %IMMED 0;
   %REF COM_REG : [UNSAFE] ARRAY[_L1.._U1: INTEGER] OF UBYTE := %IMMED 0;
 %IMMED MODE : FDV_MODE := %IMMED MODE_CONVERSATIONAL;
 %IMMED INTERVAL : FDV_INTERVAL := %IMMED 0;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_CALL(
 %IMMED [UNBOUND] PROCEDURE USER_ACTION_ROUTINE := %IMMED 0;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_UPDATE(
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(FDV_TEXT_C)] PROCEDURE FDV_TEXT(
   %REF CHARS : VARYING[_U1] OF CHAR;
 %IMMED LINE : FDV_LINE := %IMMED 1;
 %IMMED COLUMN : FDV_COLUMN := %IMMED 1;
 %IMMED ATTRIBUTES : FDV_ATTRIBUTES := %IMMED [];
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_CLEAR(
 %IMMED LINE : FDV_LINE;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(FDV_MESSAGE_C)] PROCEDURE FDV_MESSAGE(
   %REF CHARS : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_DEFINE(
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_EXIT(
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FDV_SAVE(
 %IMMED LOG : BOOLEAN := %IMMED TRUE;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] FUNCTION FDV_DEBUG : BOOLEAN; EXTERNAL;

[ASYNCHRONOUS] FUNCTION LIB$SIGNAL(
 %IMMED COND_VALUE : INTEGER;
 %IMMED NUMBER : INTEGER := %IMMED 0;
 %IMMED FAO_ARGS : [UNSAFE, LIST] INTEGER) : INTEGER; EXTERNAL;

[ASYNCHRONOUS] FUNCTION LIB$FIND_FILE(
        FILE_SPEC : [CLASS_S] PACKED ARRAY[_L1.._U1:INTEGER] OF CHAR;
    VAR RESULT_SPEC : [CLASS_S] PACKED ARRAY[_L2.._U2:INTEGER] OF CHAR;
    VAR CONTEXT : INTEGER;
        DEFAULT_SPEC : [CLASS_S] PACKED ARRAY[_L4.._U4:INTEGER] OF CHAR
	:= %IMMED 0) : INTEGER; EXTERNAL;

[ASYNCHRONOUS] FUNCTION LIB$FIND_FILE_END(
    VAR CONTEXT : INTEGER) : INTEGER; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_CAP_P)] FUNCTION STR_CAP(
   %REF CHARS : VARYING[_U1] OF CHAR) : STRING; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_DEC_P)] FUNCTION STR_DEC(
        VALUE : INTEGER) : STRING; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_FLT_P)] FUNCTION STR_FLT(
        VALUE : REAL) : STRING; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_INTEGER_P)] FUNCTION STR_INTEGER(
   %REF CHARS : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0) : INTEGER; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_PAD_P)] FUNCTION STR_PAD(
   %REF CHARS : VARYING[_U1] OF CHAR;
        FILL : CHAR;
        SIZE : INTEGER) : STRING; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_REAL_P)] FUNCTION STR_REAL(
   %REF CHARS : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0) : REAL; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(STR_REMOVE_P)] FUNCTION STR_REMOVE(
   %REF CHARS : VARYING[_U1] OF CHAR;
        CH : CHAR := ' ';
        ALL : BOOLEAN := FALSE) : STRING; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(VAR_DEFINE_C)] PROCEDURE VAR_DEFINE(
   %REF NAME : VARYING[_U1] OF CHAR;
 %IMMED INDEX : INTEGER := %IMMED 0;
 %IMMED LENGTH : INTEGER := %IMMED 1;
   %REF BUFFER : [UNSAFE] ARRAY[_L4.._U4: INTEGER] OF REAL;
 %IMMED SEGMENT : BOOLEAN := %IMMED FALSE;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(VAR_DELETE_P)] PROCEDURE VAR_DELETE(
   %REF NAME : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(VAR_ADDRESS_P)] FUNCTION VAR_ADDRESS(
   %REF NAME : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0) : POINTER; EXTERNAL;

[ASYNCHRONOUS] PROCEDURE VAR_DEPOSIT(
 %IMMED CONTEXT : POINTER;
 %IMMED VALUE : REAL;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE VAR_EXAMINE(
 %IMMED CONTEXT : POINTER;
    VAR VALUE : REAL;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] PROCEDURE VAR_FIND(
 %IMMED INDEX : INTEGER;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(FUN_DEFINE_P)] PROCEDURE FUN_DEFINE(
   %REF NAME : VARYING[_U1] OF CHAR;
   %REF EXPRESSION : VARYING[_U2] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(FUN_DELETE_P)] PROCEDURE FUN_DELETE(
   %REF NAME : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(FUN_ADDRESS_P)] FUNCTION FUN_ADDRESS(
   %REF NAME : VARYING[_U1] OF CHAR;
    VAR STATUS : INTEGER := %IMMED 0) : POINTER; EXTERNAL;

[ASYNCHRONOUS] PROCEDURE FUN_EVALUATE(
 %IMMED CONTEXT : POINTER;
    VAR VALUE : REAL;
    VAR STATUS : INTEGER := %IMMED 0); EXTERNAL;

[ASYNCHRONOUS] FUNCTION FUN_PARSE_INDEX : INTEGER; EXTERNAL;

[ASYNCHRONOUS, EXTERNAL(SPAWN)] FUNCTION LIB$SPAWN(
        COMMAND : VARYING[_U1] OF CHAR) : INTEGER; EXTERNAL;

END. { RTL }
